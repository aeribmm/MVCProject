// scripts/initDb.js
const mongoose = require('mongoose');
const User = require('../models/User');
const Project = require('../models/Project');
require('dotenv').config();

async function initializeDatabase() {
    try {
        // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/project_management');
        console.log('‚úì Po≈ÇƒÖczono z bazƒÖ danych');

        // –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        if (process.env.NODE_ENV === 'development') {
            await User.deleteMany({});
            await Project.deleteMany({});
            console.log('‚úì Wyczyszczono kolekcje');
        }

        // –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const demoUser = new User({
            name: 'Jan Kowalski',
            email: 'jan@example.com',
            password: 'haslo123'
        });

        await demoUser.save();
        console.log('‚úì Utworzono u≈ºytkownika demo');

        // –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç–∞
        const demoProject = new Project({
            name: 'System zarzƒÖdzania zadaniami',
            description: 'Aplikacja do zarzƒÖdzania zadaniami dla zespo≈Çu programistycznego',
            deadline: new Date('2024-12-31'),
            createdBy: demoUser._id,
            participants: [demoUser._id],
            status: 'W trakcie'
        });

        await demoProject.save();
        console.log('‚úì Utworzono projekt demo');

        // Dod–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫ –¥–µ–º–æ-–ø—Ä–æ–µ–∫—Ç—É
        await demoProject.addProgress('Rozpoczƒôto prace nad projektem', demoUser._id);
        await demoProject.addProgress('Uko≈Ñczono podstawowƒÖ strukturƒô aplikacji', demoUser._id);
        console.log('‚úì Dodano postƒôpy do projektu demo');

        console.log('\nüéâ Baza danych zosta≈Ça zainicjalizowana!');
        console.log('\nDane logowania:');
        console.log('Email: jan@example.com');
        console.log('Has≈Ço: haslo123');

    } catch (error) {
        console.error('‚ùå B≈ÇƒÖd podczas inicjalizacji bazy danych:', error);
    } finally {
        await mongoose.connection.close();
        console.log('‚úì Zamkniƒôto po≈ÇƒÖczenie z bazƒÖ danych');
    }
}

// Uruchomienie skryptu
if (require.main === module) {
    initializeDatabase();
}

module.exports = initializeDatabase;